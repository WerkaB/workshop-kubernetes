zmienna środowiskowa - QUOTES_PATH
zmienna środowiskowa - FUN typu bool

docker pull python:latest
docker pull busybox
docker build -t shrek:latest .
docker run -d -p 5000:5000 --name=shrek shrek:latest
docker container ls -a
docker inspect <nazwa-kontenera>
curl http://0.0.0.0:5000/shrek
curl http://0.0.0.0:5000/donkey

docker build -t translate:latest .
docker run -d -p 8080:8080 --name=translate --env=FUN=True --env=SHREK_SERVICE_URL="http://172.18.0.2:5000" translate:latest
curl http://0.0.0.0:8080/translate-shrek
curl http://0.0.0.0:8080/translate-donkey

git clone https://github.com/WerkaB/workshop-kubernetes.git

curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube
kubectl create ns werka
kubectl config current-context
kubectl config set-context --current --namespace=werka
minikube image load my-image

docker pull python:latest; docker pull busybox; git clone https://github.com/WerkaB/workshop-kubernetes.git; cd workshop-kubernetes; cd shrek; docker build -t shrek:latest .; cd ../translate; docker build -t translate:latest .; curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64; sudo install minikube-linux-amd64 /usr/local/bin/minikube; minikube start --force; minikube image load shrek; minikube image load translate; cd ..;


For cm and deploy creation

mkdir yaml; cd yaml; kubectl create deploy SHREK --image=shrek:latest --replicas=1 --output=yaml --dry-run=client >> shrek.deploy.yaml; kubectl create deploy TRANSLATE --image=translate:latest --replicas=1 --output=yaml --dry-run=client >> translate.deploy.yaml; cd ../shrek/; kubectl create cm shrek-cm --from-file=quotes.json --output=yaml --dry-run=client >> ../yaml/shrek-cm.yaml